// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

// Coded by Jared Orange
/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];
	
	// DOCUMENTATION //
	
	// A Register is a storage device used to store values over time. A multi bit register
	// can be constructed from an array of w bit chips (In this case, we are building a 16 bit register
	// so we need 16 1 bit chips). The input pin carries the data from the numeric input and the load allows
	// the array cell to be written in. The output pin carries out the current state of the array cell.
	// The read and write is very similar to the Bit.hdl

    PARTS:
    // Put your code here:
	Bit(in=in[0], load = load, out = out[0]);
	Bit(in=in[1], load = load, out = out[1]);
	Bit(in=in[2], load = load, out = out[2]);
	Bit(in=in[3], load = load, out = out[3]);
	Bit(in=in[4], load = load, out = out[4]);
	Bit(in=in[5], load = load, out = out[5]);
	Bit(in=in[6], load = load, out = out[6]);
	Bit(in=in[7], load = load, out = out[7]);
	Bit(in=in[8], load = load, out = out[8]);
	Bit(in=in[9], load = load, out = out[9]);
	Bit(in=in[10], load = load, out = out[10]);
	Bit(in=in[11], load = load, out = out[11]);
	Bit(in=in[12], load = load, out = out[12]);
	Bit(in=in[13], load = load, out = out[13]);
	Bit(in=in[14], load = load, out = out[14]);
	Bit(in=in[15], load = load, out = out[15]);
}
